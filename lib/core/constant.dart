import 'dart:convert';

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_email_sender/flutter_email_sender.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:intl/intl.dart';
import 'package:provider/provider.dart';
import '../../provider/auth_provider.dart';

const baseUrl = "https://beta.zafco.ae";

class Constant {
  String comingSoonImg =
      "";
  var boxDecoration = BoxDecoration(
    color: Colors.white,
    borderRadius: BorderRadius.all(Radius.circular(8)),
    boxShadow: [
      BoxShadow(
        color: Colors.grey.withOpacity(0.5),
        blurRadius: 3,
        offset: Offset(2, 2), // changes position of shadow
      ),
    ],
  );

  getToast({required String title}) {
    Fluttertoast.showToast(
        msg: title,
        toastLength: Toast.LENGTH_SHORT,
        gravity: ToastGravity.BOTTOM,
        fontSize: 16.0);
  }

  getFormattedDate({required String date}) {
    return DateFormat.yMMMd().format(DateTime.parse(date));
  }

  getImage({required String imgSrc, BoxFit? fit}) {
    if (imgSrc.contains("https")) {
      return Image.network(
        imgSrc,
        fit: fit,
      );
    } else {
      return Image.memory(
        base64Decode(imgSrc),
        fit: fit,
      );
    }
  }

  getFormattedString({required String str}) {
    List<String> list = str.split("_");
    String fStr = "";
    for (int i = 0; i < list.length; i++) {
      fStr = "$fStr ${list[i][0].toUpperCase()}${list[i].substring(1)}";
    }
    return fStr;
  }

  getStatusColor({required String status}) {
    if (status.toLowerCase() == "pending for credit check") {
      return Color(0xffc9a900);
    } else if (status.toLowerCase() == "completed") {
      return Color(0xff00a35e);
    } else {
      return Color(0xff006cea);
    }
  }

  sendMail({required String emailId}) async {
    Email email = Email(
      recipients: [emailId],
    );
    await FlutterEmailSender.send(email);
  }

  String getUserName({required int userId, required BuildContext context}) {
    var customers =
        Provider.of<AuthProvider>(context, listen: false).userDetail.customers;
    for (var customer in customers) {
      if (customer.id == userId) {
        return customer.name;
      }
    }
    return "";
  }
}
